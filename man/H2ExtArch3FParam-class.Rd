% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s4-H2ExtArch3FParam.R
\docType{class}
\name{H2ExtArch3FParam-class}
\alias{H2ExtArch3FParam-class}
\alias{H2ExtArch3FParam}
\alias{initialize,H2ExtArch3FParam-method}
\alias{initialize,H2ExtArch3FParam,ANY-method}
\alias{simulate_dt,H2ExtArch3FParam-method}
\alias{ClaytonH2ExtArch3FParam-class}
\alias{ClaytonH2ExtArch3FParam}
\alias{initialize,ClaytonH2ExtArch3FParam-method}
\alias{initialize,ClaytonH2ExtArch3FParam,ANY-method}
\alias{FrankH2ExtArch3FParam-class}
\alias{FrankH2ExtArch3FParam}
\alias{initialize,FrankH2ExtArch3FParam-method}
\alias{initialize,FrankH2ExtArch3FParam,ANY-method}
\alias{GumbelH2ExtArch3FParam-class}
\alias{GumbelH2ExtArch3FParam}
\alias{initialize,GumbelH2ExtArch3FParam-method}
\alias{initialize,GumbelH2ExtArch3FParam,ANY-method}
\alias{JoeH2ExtArch3FParam-class}
\alias{JoeH2ExtArch3FParam}
\alias{initialize,JoeH2ExtArch3FParam-method}
\alias{initialize,JoeH2ExtArch3FParam,ANY-method}
\title{Three-factor H2-extendible Archimedean calibration parameter classes}
\usage{
\S4method{initialize}{H2ExtArch3FParam}(
  .Object,
  partition = list(1L:2L, 3L:5L),
  lambda = 0.1,
  nu = c(0.2, 0.3),
  rho = NULL,
  tau = NULL,
  survival = TRUE,
  family = c("Clayton", "Frank", "Gumbel", "Joe")
)

\S4method{simulate_dt}{H2ExtArch3FParam}(object, ..., n_sim = 10000)

\S4method{initialize}{ClaytonH2ExtArch3FParam}(.Object, ..., survival = FALSE)

\S4method{initialize}{FrankH2ExtArch3FParam}(.Object, ..., survival = TRUE)

\S4method{initialize}{GumbelH2ExtArch3FParam}(.Object, ..., survival = TRUE)

\S4method{initialize}{JoeH2ExtArch3FParam}(.Object, ..., survival = TRUE)
}
\arguments{
\item{.Object}{ An object:  see the \dQuote{Initialize Methods} section.}

\item{partition}{Partition of the components (only adjacent grouping allowed).}

\item{lambda}{Marginal intensity.}

\item{nu}{Dependency parameter (see \link[copula:archmCopula-class]{copula::archmCopula} and
\link[copula:nacopula-class]{copula::nacopula}).}

\item{rho}{Spearman's Rho.}

\item{tau}{Kendall's Tau.}

\item{survival}{Flag if survival copula is specified (default, except for Clayton)}

\item{family}{Name of the Archimedean copula family
(see \link[copula:archmCopula-class]{copula::archmCopula}).}

\item{object}{A \linkS4class{CalibrationParam}-object.}

\item{...}{Pass-through parameters.}

\item{n_sim}{Number of samples.}
}
\description{
Calibration parameter classes with three parameters for the 2-level
hierarchically-extendible Archimedean families with exponential margins.
}
\details{
For all implemented families, the parameters \code{nu} can be replaced by
\emph{Spearman's Rho} \code{rho} or \emph{Kendall's Tau} \code{tau}.
For all implemented families, the possible range for \code{rho} and \code{tau} is
between zero and one with the restriction that the global parameter has to be
smaller or equal than the corresponding component parameter. Additionally, we
support only that parameters of the same type are provided, i.e. \code{rho}. The
parameters have a one-to-one mapping to \code{nu}.
}
\section{Functions}{
\itemize{
\item \code{initialize,H2ExtArch3FParam-method}: Constructor

\item \code{simulate_dt,H2ExtArch3FParam-method}: simulates the default times \eqn{(\tau_1, \ldots, \tau_d)} and returns a
matrix \code{x} with \code{nrow(x) == n_sim} and \code{ncol(x) == dim(object)} if
\code{dim(object) > 1L} and a vector \code{x} with \code{length(x) == n_sim} otherwise.

\item \code{initialize,ClaytonH2ExtArch3FParam-method}: Constructor

\item \code{initialize,FrankH2ExtArch3FParam-method}: Constructor

\item \code{initialize,GumbelH2ExtArch3FParam-method}: Constructor

\item \code{initialize,JoeH2ExtArch3FParam-method}: Constructor
}}

\section{Slots}{

\describe{
\item{\code{lambda}}{The marginal rate}

\item{\code{nu}}{Model-specific dependence parameters for the global- and the
component-models.}

\item{\code{partition}}{Partition of the components (only adjacent grouping allowed)}
}}

\examples{
H2ExtArch3FParam(
  partition = list(1:3, 4:6, 7:10, 11:15),
  lambda = 8e-2, tau = c(0.3, 0.5),
  survival = FALSE, family = "Clayton")
H2ExtArch3FParam(
  partition = list(1:3, 4:6, 7:10, 11:15),
  lambda = 8e-2, tau = c(0.3, 0.5),
  survival = TRUE, family = "Gumbel")

parm <- FrankH2ExtArch3FParam(
  partition = list(1:2, 3:6, 7:8),
  lambda = 8e-2, rho = c(0.2, 0.7))
simulate_dt(parm, n_sim = 5e1)

ClaytonH2ExtArch3FParam(
  partition = list(1:3, 4:6, 7:10, 11:15),
  lambda = 8e-2, tau = c(0.3, 0.5))
ClaytonH2ExtArch3FParam(
  partition = list(1:3, 4:6, 7:10, 11:15),
  lambda = 8e-2, rho = c(0.3, 0.5))
FrankH2ExtArch3FParam(
  partition = list(1:3, 4:6, 7:10, 11:15),
  lambda = 8e-2, tau = c(0.3, 0.5))
FrankH2ExtArch3FParam(
  partition = list(1:3, 4:6, 7:10, 11:15),
  lambda = 8e-2, rho = c(0.3, 0.5))
GumbelH2ExtArch3FParam(
  partition = list(1:3, 4:6, 7:10, 11:15),
  lambda = 8e-2, tau = c(0.3, 0.5))
GumbelH2ExtArch3FParam(
  partition = list(1:3, 4:6, 7:10, 11:15),
  lambda = 8e-2, rho = c(0.3, 0.5))
JoeH2ExtArch3FParam(
  partition = list(1:3, 4:6, 7:10, 11:15),
  lambda = 8e-2, tau = c(0.3, 0.5))
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/allClass-S4.R, R/simulateParam-S4.R,
%   R/expectedValue-S4.R
\docType{class}
\name{ExtArch2FParam-class}
\alias{ExtArch2FParam-class}
\alias{FrankExtArch2FParam-class}
\alias{FrankExtArch2FParam}
\alias{simulate_param,FrankExtArch2FParam-method}
\alias{expected_pcds_loss,FrankExtArch2FParam-method}
\title{Two-factor extendible Archimedean calibration parameter classes}
\usage{
\S4method{simulate_param}{FrankExtArch2FParam}(object, times, ..., n_sim = 10000)

\S4method{expected_pcds_loss}{FrankExtArch2FParam}(
  object,
  times,
  recovery_rate,
  ...,
  method = c("default", "FrankExtArch2FParam", "CalibrationParam")
)
}
\arguments{
\item{object}{The calibration parameter object.}

\item{times}{Point-in-time.}

\item{...}{Pass-through parameter.}

\item{n_sim}{Number of samples.}

\item{recovery_rate}{The recovery rate of the portfolio CDS/CDO.}

\item{method}{Calculation method (either \code{"default"} or the name of the
class whose implementation should be used).}
}
\description{
Calibration parameter classes with two parameters for the extendible
Archimedean families with exponential margins.
}
\details{
For all implemented families, the parameter \code{nu} can be replaced by
\emph{Spearman's Rho} \code{rho}, \emph{Kendall's Tau} \code{tau}.
For all implemented families, the possible range for \code{rho} and \code{tau}
is from zero to one (boundaries might not be included) and have a
one-to-one mapping to the model-specific parameter \code{nu}.
}
\section{Functions}{
\itemize{
\item \code{simulate_param,FrankExtArch2FParam-method}: simulates the default counting process \eqn{L} and returns a matrix \code{x} with
\code{nrow(x) == n_sim} and \code{ncol(x) == length(times)} if \code{length(times) > 1L}
and a vector \code{x} with \code{length(x) == n_sim} otherwise.

\item \code{expected_pcds_loss,FrankExtArch2FParam-method}: returns the expected portfolio CDS loss for a specific time-point.
}}

\section{Slots}{

\describe{
\item{\code{lambda}}{The marginal recovery_rate}

\item{\code{nu}}{Model specific parameter}
}}

\examples{
simulate_param(FrankExtArch2FParam(dim = 5), 1e1, seq(0, 5, by = 0.25))

expected_pcds_loss(FrankExtArch2FParam(dim = 75, lambda = 0.05, rho = 0.6),
  times = 0.25, recovery_rate = 0.4)
expected_pcds_loss(FrankExtArch2FParam(dim = 75, lambda = 0.05, rho = 0.6),
  times = 0.25, recovery_rate = 0.4, method = "CalibrationParam")

}

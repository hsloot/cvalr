% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s4-ExtArch2FParam.R
\docType{class}
\name{ExtArch2FParam-class}
\alias{ExtArch2FParam-class}
\alias{ExtArch2FParam}
\alias{initialize,ExtArch2FParam-method}
\alias{initialize,ExtArch2FParam,ANY-method}
\alias{simulate_dt,ExtArch2FParam-method}
\alias{expected_pcds_equation,ExtArch2FParam-method}
\alias{show,ExtArch2FParam-method}
\alias{ClaytonExtArch2FParam-class}
\alias{ClaytonExtArch2FParam}
\alias{initialize,ClaytonExtArch2FParam-method}
\alias{initialize,ClaytonExtArch2FParam,ANY-method}
\alias{FrankExtArch2FParam-class}
\alias{FrankExtArch2FParam}
\alias{initialize,FrankExtArch2FParam-method}
\alias{initialize,FrankExtArch2FParam,ANY-method}
\alias{GumbelExtArch2FParam-class}
\alias{GumbelExtArch2FParam}
\alias{initialize,GumbelExtArch2FParam-method}
\alias{initialize,GumbelExtArch2FParam,ANY-method}
\alias{JoeExtArch2FParam-class}
\alias{JoeExtArch2FParam}
\alias{initialize,JoeExtArch2FParam-method}
\alias{initialize,JoeExtArch2FParam,ANY-method}
\title{Two-factor extendible Archimedean calibration parameter classes}
\usage{
\S4method{initialize}{ExtArch2FParam}(
  .Object,
  dim,
  lambda,
  nu,
  rho,
  tau,
  survival,
  family = c("Clayton", "Frank", "Gumbel", "Joe")
)

\S4method{simulate_dt}{ExtArch2FParam}(object, ..., n_sim = 10000L)

\S4method{expected_pcds_equation}{ExtArch2FParam}(
  object,
  times,
  discount_factors,
  recovery_rate,
  coupon,
  upfront,
  ...,
  method = c("default", "prob", "mc")
)

\S4method{show}{ExtArch2FParam}(object)

\S4method{initialize}{ClaytonExtArch2FParam}(.Object, ..., survival = FALSE)

\S4method{initialize}{FrankExtArch2FParam}(.Object, ..., survival = TRUE)

\S4method{initialize}{GumbelExtArch2FParam}(.Object, ..., survival = TRUE)

\S4method{initialize}{JoeExtArch2FParam}(.Object, ..., survival = TRUE)
}
\arguments{
\item{.Object}{ An object:  see the \dQuote{Initialize Methods} section.}

\item{dim}{Dimension.}

\item{lambda}{Marginal intensity.}

\item{nu}{(Internal) dependence parameter (see \link[copula:archmCopula-class]{copula::archmCopula}).}

\item{rho}{Bivariate Spearman's Rho.}

\item{tau}{Bivariate Kendall's Tau.}

\item{survival}{Flag if survival copula is specified (default, except for Clayton).}

\item{family}{Name of the Archimedean copula family (see \link[copula:archmCopula-class]{copula::archmCopula}).}

\item{object}{A \linkS4class{CalibrationParam}-object.}

\item{...}{Pass-through parameters.}

\item{n_sim}{Number of samples.}

\item{times}{A non-negative numeric vector of timepoints.}

\item{discount_factors}{Non-negative numeric vector for the discount factors for the timepoints.}

\item{recovery_rate}{Non-negative number between zero and one for the \emph{recovery rate}..}

\item{coupon}{Numeric number for the running coupon.}

\item{upfront}{Numeric number for the upfront payment.}

\item{method}{Calculation method (either \code{"default"} or the name of the
class whose implementation should be used).}
}
\description{
\linkS4class{CalibrationParam}-class with two parameters for the extendible
Archimedean-(survival-)copula model with Exponential margins for the
\emph{(average) default counting process}.
}
\details{
The model is defined by the assumption that the multivariate default times
\eqn{\tau = (\tau_1, \ldots, \tau_d)} are from an extendible
Archimedean-(survival-)copula with Exponential margins.
The (internal) dependency parameter \eqn{\nu} (model specific) has a
one-to-one relationship and can be replaced by \emph{Spearman's Rho} \code{rho} (except
for the family based on Joe's copula) or \emph{Kendall's Tau} \code{tau}. The possible
range for \code{rho} and \code{tau} is from zero to one (boundaries might not be
included).
}
\section{Functions}{
\itemize{
\item \code{initialize,ExtArch2FParam-method}: Constructor

\item \code{simulate_dt,ExtArch2FParam-method}: simulates the vector of \emph{default times} and returns a matrix \code{x} with
\code{dim(x) == c(n_sim, getDimension(object))}.

\item \code{expected_pcds_equation,ExtArch2FParam-method}: calculates the \emph{payoff equation} for a \emph{portfolio CDS} (vectorized w.r.t.
the argumentes \code{recovery_rate}, \code{coupon}, and \code{upfront}).

\item \code{show,ExtArch2FParam-method}: Display the object.

\item \code{initialize,ClaytonExtArch2FParam-method}: Constructor

\item \code{initialize,FrankExtArch2FParam-method}: Constructor

\item \code{initialize,GumbelExtArch2FParam-method}: Constructor

\item \code{initialize,JoeExtArch2FParam-method}: Constructor
}}

\section{Slots}{

\describe{
\item{\code{lambda}}{A non-negative number for the marginal rate.}

\item{\code{nu}}{A numeric number for the model specific dependence parameter.}
}}

\section{Simulation}{

The default times are sampled in a two-stage procedure: First a sample is
drawn from the Archimedean copula, see \link[copula:archmCopula-class]{copula::archmCopula} and
\code{\link[copula:Copula]{copula::rCopula()}}; then the results are transformed using \code{\link[stats:Exponential]{stats::qexp()}}.
}

\section{Expected portfolio CDS loss}{

The \emph{expected portfolio CDS loss} for \emph{recovery rate} \eqn{R} is calculated
using that
\deqn{
  \mathbb{E}[g(L_t)]
    = (1 - R) \cdot F(t)
}
with \eqn{g(x) = (1 - R) \cdot x} and \eqn{F} being the Exponential
distribution function for rate \eqn{\lambda}.
}

\examples{
ExtArch2FParam(dim = 5L, lambda = 8e-2, rho = 4e-1, family = "Clayton", survival = TRUE)
ExtArch2FParam(dim = 5L, lambda = 8e-2, rho = 4e-1, family = "Gumbel", survival = FALSE)
ExtArch2FParam(dim = 5L, lambda = 8e-2, tau = 4e-1, family = "Frank", survival = FALSE)
ExtArch2FParam(dim = 5L, lambda = 8e-2, tau = 4e-1, family = "Joe", survival = FALSE)
parm <- FrankExtArch2FParam(dim = 5L, lambda = 8e-2, rho = 4e-1)
simulate_dt(parm, n_sim = 5L)

parm <- FrankExtArch2FParam(75L, 8e-2, rho = 4e-1)
expected_pcds_equation(
  parm, times =seq(0.25, 5, by = 0.25), discount_factors = rep(1, 20L), recovery_rate = 0.4,
  coupon = 1e-1, upfront = 0)
expected_pcds_equation(
  parm, times =seq(0.25, 5, by = 0.25), discount_factors = rep(1, 20L), recovery_rate = 0.4,
  coupon = 1e-1, upfront = 0, method = "mc", n_sim = 1e1)

ClaytonExtArch2FParam()
ClaytonExtArch2FParam(5L, 8e-2, rho = 4e-1)
ClaytonExtArch2FParam(5L, 8e-2, tau = 4e-1)
FrankExtArch2FParam()
FrankExtArch2FParam(5L, 8e-2, rho = 4e-1)
FrankExtArch2FParam(5L, 8e-2, tau = 4e-1)
GumbelExtArch2FParam()
GumbelExtArch2FParam(5L, 8e-2, rho = 4e-1)
GumbelExtArch2FParam(5L, 8e-2, tau = 4e-1)
JoeExtArch2FParam()
JoeExtArch2FParam(5L, 8e-2, tau = 4e-1)
}

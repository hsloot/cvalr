% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s4-ExMOParam.R
\docType{class}
\name{ExMOParam-class}
\alias{ExMOParam-class}
\alias{ExMOParam}
\alias{initialize,ExMOParam-method}
\alias{initialize,ExMOParam,ANY-method}
\alias{simulate_dt,ExMOParam-method}
\alias{simulate_adcp,ExMOParam-method}
\alias{show,ExMOParam-method}
\title{Exchangeable Marshall--Olkin calibration parameter}
\usage{
\S4method{initialize}{ExMOParam}(.Object, ex_intensities)

\S4method{simulate_dt}{ExMOParam}(object, ..., n_sim = 10000L)

\S4method{simulate_adcp}{ExMOParam}(object, times, ..., n_sim = 10000L)

\S4method{show}{ExMOParam}(object)
}
\arguments{
\item{.Object}{ An object:  see the \dQuote{Initialize Methods} section.}

\item{ex_intensities}{The (scaled) exchangeable intensities  of the
Marshall-Olkin distribution (see \code{\link[rmo:BernsteinFunction-class]{rmo::exIntensities()}}).}

\item{object}{A \linkS4class{CalibrationParam}-object.}

\item{...}{arguments to specify properties of the new object, to
      be passed to \code{initialize()}.}

\item{n_sim}{Number of samples.}

\item{times}{A non-negative numeric vector of timepoints.}
}
\description{
\linkS4class{CalibrationParam}-class for the exchangeable Marshall-Olkin model for
the \emph{average default counting process}. Extends \linkS4class{ExMarkovParam}.
}
\details{
The model is defined by the assumption that the multivariate default times
\eqn{\tau = (\tau_1, \ldots, \tau_d)} are exchangeable Marshall-Olkin.
The joint survival function of all portfolio items is
\deqn{
  P(\tau > t)
    = \exp{(- a_0 t_{[1]} - \cdots - a_{d-1} t_{[d]})} ,
}
for \eqn{t_{[1]} \geq \cdots \geq t_{[d]}} begin the descending version of
\eqn{t} and
\deqn{
  a_{i}
    = \sum_{l=0}^{d-i-1} \binom{d-i-1}{l} \lambda_{l+1} .
}
The (scaled) exchangeable intensities, provided to the constructor are
\deqn{
  \binom{d}{i} \lambda_{i} , \ i \in \{ 1 , \ldots , d \} .
}
}
\section{Functions}{
\itemize{
\item \code{initialize(ExMOParam)}: Constructor

\item \code{simulate_dt(ExMOParam)}: simulates the vector of \emph{default times} and returns a matrix \code{x} with
\code{dim(x) == c(n_sim, getDimension(object))}.

\item \code{simulate_adcp(ExMOParam)}: simulates the \emph{average default counting process} and returns a
matrix \code{x} with \code{dim(x) == c(n_sim, length(times))}.

\item \code{show(ExMOParam)}: Display the object.

}}
\section{Slots}{

\describe{
\item{\code{ex_intensities}}{The (scaled) exchangeable intensities  of the
exchangeable Marshall-Olkin distribution (see \code{\link[rmo:BernsteinFunction-class]{rmo::exIntensities()}}).}
}}

\section{Simulation}{

The default times are sampled using \code{\link[rmo:rexmo]{rmo::rexmo()}}.


The default times are sampled using \code{\link[rmo:rexmo]{rmo::rexmo()}}.
}

\examples{
ExMOParam()
ExMOParam(rmo::exIntensities(rmo::AlphaStableBernsteinFunction(0.4), 5L))
parm <- ExMOParam(rmo::exIntensities(rmo::AlphaStableBernsteinFunction(0.4), 5L))
simulate_dt(parm, n_sim = 5L)

parm <- ExMOParam(rmo::exIntensities(rmo::AlphaStableBernsteinFunction(0.4), 5L))
simulate_adcp(parm, times = seq(25e-2, 5, by = 25e-2), n_sim = 5L)

}
